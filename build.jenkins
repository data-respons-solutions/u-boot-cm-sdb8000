pipeline {
	agent { label 'linux' }

	environment {
		BUILD_USER = "${sh (returnStdout: true, script: 'id -un').trim()}"
		BUILD_UID = "${sh (returnStdout: true, script: 'id -u').trim()}"
		BUILD_GID = "${sh (returnStdout: true, script: 'id -g').trim()}"
	}

	stages {
	stage('Init') {
		steps {
			// Jenkins git module allows recursively updating submodules.
			// It works fine for a clean build but consequent builds where a single submodule is updated
			// will fail due to credentials.
			// Workaround is to update submodules from this step instead.
			sshagent (credentials: ['github-data-respons-solutions']) {
				sh """ 
					git submodule update --init --recursive
				"""
			}
		}
	}
	stage('Container') {
		agent {
			dockerfile {
				filename 'build.docker'
				dir './'
				additionalBuildArgs "--build-arg USERNAME=${BUILD_USER} --build-arg UID=${BUILD_UID} --build-arg GID=${BUILD_GID}"
				reuseNode true
			}
		}
		
		environment {
			GTAG = "${sh (returnStdout: true, script: 'git describe --always --tags --long --dirty').trim()}"
		}
	
		stages {
		stage('Prepare') {
			steps {
				sh """
					make clean
				"""
			}
		}
		stage('Build') {
			steps {
				sh """
					make
				"""
			}
		}
		}
	}
	}
}
